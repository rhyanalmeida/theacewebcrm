version: '3.8'\n\nservices:\n  # PostgreSQL Database\n  postgres:\n    image: postgres:15-alpine\n    container_name: ace-crm-postgres\n    restart: unless-stopped\n    environment:\n      POSTGRES_DB: ace_crm\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: password\n      PGDATA: /var/lib/postgresql/data/pgdata\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./database/schemas:/docker-entrypoint-initdb.d\n    networks:\n      - ace-crm-network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U postgres\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  # Redis Cache\n  redis:\n    image: redis:7-alpine\n    container_name: ace-crm-redis\n    restart: unless-stopped\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n      - ./infrastructure/docker/redis.conf:/usr/local/etc/redis/redis.conf\n    command: redis-server /usr/local/etc/redis/redis.conf\n    networks:\n      - ace-crm-network\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  # Backend API\n  backend:\n    build:\n      context: ./backend\n      dockerfile: Dockerfile\n      target: development\n    container_name: ace-crm-backend\n    restart: unless-stopped\n    environment:\n      NODE_ENV: development\n      PORT: 3000\n      DB_HOST: postgres\n      DB_PORT: 5432\n      DB_NAME: ace_crm\n      DB_USER: postgres\n      DB_PASSWORD: password\n      REDIS_HOST: redis\n      REDIS_PORT: 6379\n      JWT_SECRET: dev-jwt-secret-change-in-production\n      JWT_EXPIRES_IN: 24h\n      CORS_ORIGIN: http://localhost:3001\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - ./backend:/app\n      - /app/node_modules\n      - ./backend/uploads:/app/uploads\n    depends_on:\n      postgres:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    networks:\n      - ace-crm-network\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3000/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n\n  # Frontend Application\n  frontend:\n    build:\n      context: ./frontend\n      dockerfile: Dockerfile\n      target: development\n    container_name: ace-crm-frontend\n    restart: unless-stopped\n    environment:\n      VITE_API_URL: http://localhost:3000/api/v1\n      VITE_APP_NAME: ACE CRM\n      VITE_APP_VERSION: 1.0.0\n    ports:\n      - \"3001:3001\"\n    volumes:\n      - ./frontend:/app\n      - /app/node_modules\n    depends_on:\n      - backend\n    networks:\n      - ace-crm-network\n\n  # Nginx Reverse Proxy (Production)\n  nginx:\n    image: nginx:alpine\n    container_name: ace-crm-nginx\n    restart: unless-stopped\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./infrastructure/docker/nginx.conf:/etc/nginx/nginx.conf\n      - ./infrastructure/docker/ssl:/etc/nginx/ssl\n    depends_on:\n      - backend\n      - frontend\n    networks:\n      - ace-crm-network\n    profiles:\n      - production\n\n  # PgAdmin (Database Management)\n  pgadmin:\n    image: dpage/pgadmin4:latest\n    container_name: ace-crm-pgadmin\n    restart: unless-stopped\n    environment:\n      PGADMIN_DEFAULT_EMAIL: admin@acecrm.com\n      PGADMIN_DEFAULT_PASSWORD: admin\n      PGADMIN_CONFIG_SERVER_MODE: 'False'\n    ports:\n      - \"8080:80\"\n    volumes:\n      - pgadmin_data:/var/lib/pgadmin\n    depends_on:\n      - postgres\n    networks:\n      - ace-crm-network\n    profiles:\n      - development\n\n  # Redis Insight (Redis Management)\n  redis-insight:\n    image: redislabs/redisinsight:latest\n    container_name: ace-crm-redis-insight\n    restart: unless-stopped\n    ports:\n      - \"8001:8001\"\n    volumes:\n      - redis_insight_data:/db\n    depends_on:\n      - redis\n    networks:\n      - ace-crm-network\n    profiles:\n      - development\n\n  # Prometheus (Metrics)\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: ace-crm-prometheus\n    restart: unless-stopped\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./infrastructure/docker/prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus_data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n      - '--web.console.libraries=/etc/prometheus/console_libraries'\n      - '--web.console.templates=/etc/prometheus/consoles'\n      - '--storage.tsdb.retention.time=200h'\n      - '--web.enable-lifecycle'\n    networks:\n      - ace-crm-network\n    profiles:\n      - monitoring\n\n  # Grafana (Metrics Visualization)\n  grafana:\n    image: grafana/grafana:latest\n    container_name: ace-crm-grafana\n    restart: unless-stopped\n    environment:\n      GF_SECURITY_ADMIN_USER: admin\n      GF_SECURITY_ADMIN_PASSWORD: admin\n      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource\n    ports:\n      - \"3002:3000\"\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./infrastructure/docker/grafana:/etc/grafana/provisioning\n    depends_on:\n      - prometheus\n    networks:\n      - ace-crm-network\n    profiles:\n      - monitoring\n\n  # Elasticsearch (Search & Logging)\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0\n    container_name: ace-crm-elasticsearch\n    restart: unless-stopped\n    environment:\n      - discovery.type=single-node\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - xpack.security.enabled=false\n    ports:\n      - \"9200:9200\"\n    volumes:\n      - elasticsearch_data:/usr/share/elasticsearch/data\n    networks:\n      - ace-crm-network\n    profiles:\n      - search\n\n  # Kibana (Log Visualization)\n  kibana:\n    image: docker.elastic.co/kibana/kibana:8.11.0\n    container_name: ace-crm-kibana\n    restart: unless-stopped\n    environment:\n      ELASTICSEARCH_HOSTS: http://elasticsearch:9200\n    ports:\n      - \"5601:5601\"\n    depends_on:\n      - elasticsearch\n    networks:\n      - ace-crm-network\n    profiles:\n      - search\n\n  # MinIO (S3-compatible object storage)\n  minio:\n    image: minio/minio:latest\n    container_name: ace-crm-minio\n    restart: unless-stopped\n    environment:\n      MINIO_ROOT_USER: minioadmin\n      MINIO_ROOT_PASSWORD: minioadmin\n    ports:\n      - \"9000:9000\"\n      - \"9001:9001\"\n    volumes:\n      - minio_data:/data\n    command: server /data --console-address \":9001\"\n    networks:\n      - ace-crm-network\n    profiles:\n      - storage\n\nvolumes:\n  postgres_data:\n    driver: local\n  redis_data:\n    driver: local\n  pgadmin_data:\n    driver: local\n  redis_insight_data:\n    driver: local\n  prometheus_data:\n    driver: local\n  grafana_data:\n    driver: local\n  elasticsearch_data:\n    driver: local\n  minio_data:\n    driver: local\n\nnetworks:\n  ace-crm-network:\n    driver: bridge\n    ipam:\n      config:\n        - subnet: 172.20.0.0/16